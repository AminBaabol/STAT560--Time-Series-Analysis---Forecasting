ylab = 'Residual')
points(Arima.Model$residuals,
pch = 16,
cex = .5)
abline(h = 0)
#forecast
forecast(ARIMA.1,5)
ARIMA.1
ARIMA.2 <- Arima((Final_data[,2]), order = c(0,1,0))
ARIMA.2
Arima((Final_data[,2]), order = c(1,2,0))
Arima((Final_data[,2]), order = c(1,2,0)
Arima((Final_data[,2]), order = c(1,2,0))
Arima((Final_data[,2]), order = c(1,2,0))
#part a AIC
AIC(ARIMA.1)
#Arima(0,1,0) AIC
ARIMA.2 <- Arima((Final_data[,2]), order = c(0,1,0))
AIC(ARIMA.2)
arima.020 <- arima(Crimes.ts, order=c(0,2,0))
arima.120 <- arima(Crimes.ts, order=c(1,2,0))
arima.220 <- arima(Crimes.ts, order=c(2,2,0))
arima.021 <- arima(Crimes.ts, order=c(0,2,1))
arima.022 <- arima(Crimes.ts, order=c(0,2,2))
paste("ARIMA(0,2,0) AIC")
AIC(arima.020)
paste("ARIMA(1,2,0) AIC")
AIC(arima.120)
paste("ARIMA(2,2,0) AIC")
AIC(arima.220)
paste("ARIMA(0,2,1) AIC")
AIC(arima.021)
paste("ARIMA(0,2,0) AIC")
AIC(arima.020)
#model diagnostics
checkresiduals(arima.120)
#1 to 10 step ahead Forecasting
forecast10 <- as.data.frame(forecast(arima.120))
forecast10
#Calculating 95% PI
paste("Lower bound 95% prediction inverval")
data.frame(forecast10$`Lo 95`)
paste("Lower bound 95% prediction inverval")
data.frame(forecast10$`Hi 95`)
arima.120 <- arima(Final_data[,2], order=c(1,2,0))
arima.120
arima.120
fitted<-as.vector(fitted(arima.120))
fitted
set.seed(54842)
auto.arima(Final_data[,2])
arima.120 <- arima(Final_data[,2], order=c(1,2,0))
arima.120
set.seed(54842)
auto.arima(Final_data[,2])
#ARIMA1
arima.120 <- arima(Final_data[,2], order=c(1,2,0))
arima.120
fitted<-as.vector(fitted(arima.120))
fitted
#Model Adequacy
checkresiduals(arima.120)
#4-in-1 plot of the residuals
par(mfrow = c(2,2),oma = c(0,0,0,0))
qqnorm(arima.120$residuals,
datax = TRUE,
pch = 16,
xlab = 'Residual',
main = '')
qqline(arima.120$residuals,
datax = TRUE)
plot(arima.120$fitted,
arima.120$residuals,
pch = 16,
xlab = 'Fitted Value',
ylab = 'Residual')
arima.120$fitted
fitted<-as.vector(fitted(arima.120))
fitted
set.seed(54842)
auto.arima(Final_data[,2])
#ARIMA1
arima.120 <- arima(Final_data[,2], order=c(1,2,0))
arima.120
fitted<-as.vector(fitted(arima.120))
fitted
#Model Adequacy
checkresiduals(arima.120)
#4-in-1 plot of the residuals
par(mfrow = c(2,2),oma = c(0,0,0,0))
qqnorm(arima.120$residuals,
datax = TRUE,
pch = 16,
xlab = 'Residual',
main = '')
qqline(arima.120$residuals,
datax = TRUE)
plot(fitted(arima.120),
arima.120$residuals,
pch = 16,
xlab = 'Fitted Value',
ylab = 'Residual')
abline(h = 0)
hist(arima.120$residuals,
col = "gray",
xlab = 'Residual',
main = '')
plot(arima.120$residuals,
type = "l",
xlab = 'Observation Order',
ylab = 'Residual')
points(arima.120$residuals,
pch = 16,
cex = .5)
abline(h = 0)
#forecast
forecast(arima.120,5)
#part a AIC
AIC(arima.120)
#Arima(0,1,0) AIC
ARIMA.2 <- Arima((Final_data[,2]), order = c(0,1,0))
AIC(ARIMA.2)
step.ahead.forecast <- as.data.frame(forecast(arima.120))
step.ahead.forecast
#Calculating 95% PI
paste("Lower bound 95% prediction inverval")
data.frame(step.ahead.forecast$`Lo 95`)
paste("Lower bound 95% prediction inverval")
data.frame(step.ahead.forecast$`Hi 95`)
step.ahead.forecast <- as.data.frame(forecast(arima.120,5))
step.ahead.forecast
#Calculating 95% PI
paste("Lower bound 95% prediction inverval")
data.frame(step.ahead.forecast$`Lo 95`)
paste("Lower bound 95% prediction inverval")
data.frame(step.ahead.forecast$`Hi 95`)
arima.020 <- arima(Crimes.ts, order=c(0,2,0))
arima.120 <- arima(Crimes.ts, order=c(1,2,0))
arima.220 <- arima(Crimes.ts, order=c(2,2,0))
arima.021 <- arima(Crimes.ts, order=c(0,2,1))
arima.022 <- arima(Crimes.ts, order=c(0,2,2))
paste("ARIMA(0,2,0) AIC")
AIC(arima.020)
paste("ARIMA(1,2,0) AIC")
AIC(arima.120)
paste("ARIMA(2,2,0) AIC")
AIC(arima.220)
paste("ARIMA(0,2,1) AIC")
AIC(arima.021)
paste("ARIMA(0,2,0) AIC")
AIC(arima.020)
#model diagnostics
checkresiduals(arima.120)
#1 to 10 step ahead Forecasting
forecast10 <- as.data.frame(forecast(arima.120))
forecast10
#Calculating 95% PI
paste("Lower bound 95% prediction inverval")
data.frame(forecast10$`Lo 95`)
paste("Lower bound 95% prediction inverval")
data.frame(forecast10$`Hi 95`)
Crimes.ts
CrimeRate.ts
set.seed(54842)
auto.arima(Final_data[,2])
#ARIMA1
arima.120 <- arima(CrimeRate.ts, order=c(1,2,0))
arima.120
fitted<-as.vector(fitted(arima.120))
fitted
#Model Adequacy
checkresiduals(arima.120)
#4-in-1 plot of the residuals
par(mfrow = c(2,2),oma = c(0,0,0,0))
qqnorm(arima.120$residuals,
datax = TRUE,
pch = 16,
xlab = 'Residual',
main = '')
qqline(arima.120$residuals,
datax = TRUE)
plot(fitted(arima.120),
arima.120$residuals,
pch = 16,
xlab = 'Fitted Value',
ylab = 'Residual')
abline(h = 0)
hist(arima.120$residuals,
col = "gray",
xlab = 'Residual',
main = '')
plot(arima.120$residuals,
type = "l",
xlab = 'Observation Order',
ylab = 'Residual')
points(arima.120$residuals,
pch = 16,
cex = .5)
abline(h = 0)
#forecast
forecast(arima.120,5)
#part a AIC
AIC(arima.120)
#Arima(0,1,0) AIC
ARIMA.2 <- Arima((Final_data[,2]), order = c(0,1,0))
AIC(ARIMA.2)
step.ahead.forecast <- as.data.frame(forecast(arima.120,5))
step.ahead.forecast
#Calculating 95% PI
paste("Lower bound 95% prediction inverval")
data.frame(step.ahead.forecast$`Lo 95`)
paste("Lower bound 95% prediction inverval")
data.frame(step.ahead.forecast$`Hi 95`)
Holt.Model1.Forecast <- predict(Holt.Model1, n.ahead = 5,
prediction.interval = TRUE)
Holt.Model2.Forecast <- predict(Holt.Model2, n.ahead = 5,
prediction.interval = TRUE)
Holt.Model1.Forecast
Holt.Model2.Forecast
set.seed(1242)
#Calcuation
ACF1.calculation <- acf(CrimeRate.ts, plot = FALSE)
PACF1.Calculation <- pacf(CrimeRate.ts, plot = FALSE)
#ACF plot
Original.ACF <- ggAcf(CrimeRate.ts,lag.max = 20)+labs(title = "ACF")
Original.PACF <- ggPacf(CrimeRate.ts,lag.max = 20)+labs(title = "PACF")
Original.ACF
Original.PACF
#Variogram
# Define the variogram function:from Dr. Fan's slides
variogram_func <- function(x, lag) {
x <- as.matrix(x)
Lag <- NULL
var_k <- NULL
vario <- NULL
for (k in 1:lag) {
Lag[k] <- k
var_k[k] <- sd(diff(x, k))^2
vario[k] <- var_k[k] / var_k[1]
}
return(as.data.frame(cbind(Lag, vario)))
}
x <- CrimeRate.ts
lag_length <- 20
lag_CrimeRate <- 1:lag_length
z <- variogram_func(x, lag_length)
variogram_CrimeRate <- z$vario
variogram_CrimeRate
#Crime rate variogram plot
Orginal.variogram <- plot(lag_CrimeRate, variogram_CrimeRate,
type = "o",
col = "dark red",
main = "Variogram of Crime Rate")
Orginal.variogram
#frist 10 ACF and variogram values
paste("First 10 ACF Values")
ACF1.calculation[1:10]
paste("First 10 PACF Values")
PACF1.Calculation[1:10]
paste("First 10 variogram Values")
variogram_CrimeRate[1:10]
variogram_CrimeRate[1:10]
set.seed(1242)
#Calcuation
ACF1.calculation <- acf(CrimeRate.ts, plot = FALSE)
PACF1.Calculation <- pacf(CrimeRate.ts, plot = FALSE)
#ACF plot
Original.ACF <- ggAcf(CrimeRate.ts,lag.max = 20)+labs(title = "ACF")
Original.PACF <- ggPacf(CrimeRate.ts,lag.max = 20)+labs(title = "PACF")
Original.ACF
Original.PACF
#Variogram
# Define the variogram function:from Dr. Fan's slides
variogram_func <- function(x, lag) {
x <- as.matrix(x)
Lag <- NULL
var_k <- NULL
vario <- NULL
for (k in 1:lag) {
Lag[k] <- k
var_k[k] <- sd(diff(x, k))^2
vario[k] <- var_k[k] / var_k[1]
}
return(as.data.frame(cbind(Lag, vario)))
}
x <- CrimeRate.ts
lag_length <- 20
lag_CrimeRate <- 1:lag_length
z <- variogram_func(x, lag_length)
variogram_CrimeRate <- z$vario
variogram_CrimeRate
#Crime rate variogram plot
Orginal.variogram <- plot(lag_CrimeRate, variogram_CrimeRate,
type = "o",
col = "dark red",
main = "Variogram of Crime Rate")
Orginal.variogram
#frist 10 ACF and variogram values
paste("First 10 ACF Values")
ACF1.calculation[1:10]
paste("First 10 PACF Values")
PACF1.Calculation[1:10]
paste("First 10 variogram Values")
variogram_CrimeRate[1:10]
ACF1.calculation <- acf(CrimeRate.ts, plot = FALSE)
PACF1.Calculation <- pacf(CrimeRate.ts, plot = FALSE)
#ACF plot
Original.ACF <- ggAcf(CrimeRate.ts,lag.max = 20)+labs(title = "ACF")
Original.PACF <- ggPacf(CrimeRate.ts,lag.max = 20)+labs(title = "PACF")
Original.ACF
Original.PACF
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(ggplot2)
library(forecast)
library(tseries)
library(zoo)
library(gridExtra)
Final_data <- data.frame(read_excel("~/Desktop/GradSchool/STATS 560 Time Series Analysis/Exams/Final_data.xlsx"))
head(Final_data)
#Converting it to time series
CrimeRate.ts = ts(Final_data[,2], start = 1984, end = 2005,frequency = 1)
CrimeRate.ts
#year vs. crime rate time series plot
Original.ts <- plot(CrimeRate.ts, type = "o",
main = "Time Series Plot of The original Data")
Original.ts
set.seed(1242)
#Calcuation
ACF1.calculation <- acf(CrimeRate.ts, plot = FALSE)
PACF1.Calculation <- pacf(CrimeRate.ts, plot = FALSE)
#ACF plot
Original.ACF <- ggAcf(CrimeRate.ts,lag.max = 20)+labs(title = "ACF")
Original.PACF <- ggPacf(CrimeRate.ts,lag.max = 20)+labs(title = "PACF")
Original.ACF
Original.PACF
#Variogram
# Define the variogram function:from Dr. Fan's slides
variogram_func <- function(x, lag) {
x <- as.matrix(x)
Lag <- NULL
var_k <- NULL
vario <- NULL
for (k in 1:lag) {
Lag[k] <- k
var_k[k] <- sd(diff(x, k))^2
vario[k] <- var_k[k] / var_k[1]
}
return(as.data.frame(cbind(Lag, vario)))
}
x <- CrimeRate.ts
lag_length <- 20
lag_CrimeRate <- 1:lag_length
z <- variogram_func(x, lag_length)
variogram_CrimeRate <- z$vario
variogram_CrimeRate
#Crime rate variogram plot
Orginal.variogram <- plot(lag_CrimeRate, variogram_CrimeRate,
type = "o",
col = "dark red",
main = "Variogram of Crime Rate")
Orginal.variogram
#frist 10 ACF and variogram values
paste("First 10 ACF Values")
ACF1.calculation[1:10]
paste("First 10 PACF Values")
PACF1.Calculation[1:10]
paste("First 10 variogram Values")
variogram_CrimeRate[1:10]
tsdisplay(CrimeRate.ts)
#Stationarity check :Dicke-Fuller test
adf.test(CrimeRate.ts)
#calculating the first differencing
CrimeRate.Diff1 <- diff(ts(Final_data[,2],start = 1984, end = 2005,frequency = 1),
differences = 1)
CrimeRate.Diff1
# plot time series of the first difference
First.Diff <- plot(CrimeRate.Diff1, type = "o",
main = "Time Series Plot of The Differenced Data")
First.Diff
#First 10 differences
paste("First ten differences")
head(CrimeRate.Diff1,10)
#Stationarity check:ACF and PACF plots
ACF.diff1 <- acf(CrimeRate.Diff1, plot = FALSE)
PACF.diff1 <- pacf(CrimeRate.Diff1, plot = FALSE)
ACF.Diff1.Plot <- ggAcf(CrimeRate.Diff1,lag.max = 20)+labs(title = "ACF")
PACF.Diff1.Plot <- ggPacf(CrimeRate.Diff1,lag.max = 20)+labs(title = "PACF")
ACF.Diff1.Plot
PACF.Diff1.Plot
#Variogram of the first differences
x2 <- CrimeRate.Diff1
lag_length2 <- 19
lag_CrimeRate2 <- 1:lag_length2
z2 <- variogram_func(x2, lag_length2)
variogram_CrimeRate2 <- z2$vario
variogram_CrimeRate2
# First difference variogram plot
first.diff.variogram <- plot(lag_CrimeRate2, variogram_CrimeRate2,
type = "o",
col = "dark red",
main = "Variogram of first difference")
first.diff.variogram
#frist 10 ACF and variogram values fo the differences time seires
paste("First 10 ACF values of the differences time series")
ACF.diff1[1:10]
paste("First 10 PACF values of the differenced time series")
PACF.diff1[1:10]
paste("First 10 variogram Values of differenced time series")
variogram_CrimeRate2[1:10]
#Further stationarity checks
tsdisplay(CrimeRate.Diff1)
adf.test(CrimeRate.Diff1);
pp.test(CrimeRate.Diff1);
kpss.test(CrimeRate.Diff1)
CrimeRate.fit <- HoltWinters(CrimeRate.Diff1, beta=FALSE, gamma=FALSE)
CrimeRate.fit$alpha
set.seed(34378)
Holt.Model1 <- HoltWinters(CrimeRate.Diff1, beta=FALSE, gamma=FALSE)
Holt.Model1$fitted[,2]
sse <- sum((CrimeRate.Diff1-Holt.Model1$fitted[,2])^2)
sse
Holt.Model1$SSE
#
plot(CrimeRate.Diff1, type = "l",
pch = 16, cex = 0.5,col = "blue",
xlab = "Time",
ylab = "Crime Rate Per 100,000",
main = "Crime Rate Observed vs. Holt Winter's Fitted",
panel.first=grid())
lines(Holt.Model1$fitted[,1],type = "l",
cex = 0.5,
col = "red")
legend(19,64, legend=c("Original", "Fitted"),
col=c("blue", "red"), lty = 1:1, cex = 0.8)
Holt.Model2 <- HoltWinters(CrimeRate.Diff1,gamma = FALSE)
Holt.Model2
Holt.Model2$fitted
sse <- sum((CrimeRate.Diff1 - Holt.Model2$fitted[,1])^2)
sse
Holt.Model2$SSE
plot(CrimeRate.Diff1, type = "b",
pch = 16, cex = 0.5,col = "black",
xlab = "Time",
ylab = "Crime Rate Per 100,000",
main = "Crime Rate Observed vs. Holt Winter's Fitted",
panel.first=grid())
lines(Holt.Model1$fitted[,1],type = "l",
cex = 0.5,
col = "red")
lines(Holt.Model2$fitted[,1],type = "l",
cex = 0.5,
col = "green")
legend(2000,60, legend=c("Original", "Model1 Fitted","Model2 Fitted"),
col=c("black", "red" , "green"), lty = 1:1, cex = 0.8)
Holt.Model1.Forecast <- predict(Holt.Model1, n.ahead = 5,
prediction.interval = TRUE)
Holt.Model2.Forecast <- predict(Holt.Model2, n.ahead = 5,
prediction.interval = TRUE)
Holt.Model1.Forecast
Holt.Model2.Forecast
set.seed(54842)
auto.arima(Final_data[,2])
#ARIMA1
arima.120 <- arima(CrimeRate.ts, order=c(1,2,0))
arima.120
fitted<-as.vector(fitted(arima.120))
fitted
#Model Adequacy
checkresiduals(arima.120)
#4-in-1 plot of the residuals
par(mfrow = c(2,2),oma = c(0,0,0,0))
qqnorm(arima.120$residuals,
datax = TRUE,
pch = 16,
xlab = 'Residual',
main = '')
qqline(arima.120$residuals,
datax = TRUE)
plot(fitted(arima.120),
arima.120$residuals,
pch = 16,
xlab = 'Fitted Value',
ylab = 'Residual')
abline(h = 0)
hist(arima.120$residuals,
col = "gray",
xlab = 'Residual',
main = '')
plot(arima.120$residuals,
type = "l",
xlab = 'Observation Order',
ylab = 'Residual')
points(arima.120$residuals,
pch = 16,
cex = .5)
abline(h = 0)
#forecast
forecast(arima.120,5)
#part a AIC
AIC(arima.120)
#Arima(0,1,0) AIC
ARIMA.2 <- Arima((Final_data[,2]), order = c(0,1,0))
AIC(ARIMA.2)
step.ahead.forecast <- as.data.frame(forecast(arima.120,5))
step.ahead.forecast
#Calculating 95% PI
paste("Lower bound 95% prediction inverval")
data.frame(step.ahead.forecast$`Lo 95`)
paste("Lower bound 95% prediction inverval")
data.frame(step.ahead.forecast$`Hi 95`)
CrimeRate.ts
